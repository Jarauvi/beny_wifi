name: Tests

on:
  push:
    branches:
      - dev  # or another branch for your development workflow

jobs:
  test-and-version:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Extract version from commit message
      id: extract_version
      run: |
        # Get the first line of the commit message
        COMMIT_MSG=$(git log -1 --pretty=%B | head -n 1)
        
        # Extract version if the message starts with "Version"
        if [[ $COMMIT_MSG =~ Version[[:space:]]([0-9]+\.[0-9]+\.[0-9]+) ]]; then
          VERSION=${BASH_REMATCH[1]}
          echo "version=$VERSION" >> $GITHUB_ENV
        else
          echo "No valid version found in commit message."
          exit 1
        fi

    - name: Set up Python environment
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install homeassistant
        pip install pytest pytest-homeassistant-custom-component
        #pip install -r requirements.txt  # If your integration has additional dependencies

    - name: Run tests
      run: |
        pytest tests/
        continue-on-error: false  # Ensures workflow stops if tests fail

    - name: Update manifest.json with new version
      if: success()
      run: |
        # Update the version in manifest.json
        python scripts/update_manifest_version.py "$version"

    - name: Commit and push updated manifest.json
      if: success()
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add manifest.json
        git commit -m "Update version in manifest.json to $version"
        git push

    - name: Merge to main branch
      if: success()
      run: |
        # Check out main branch and merge changes from the current branch
        git checkout main
        git merge dev --no-ff -m "Merge dev into main after version update"
        git push origin main
